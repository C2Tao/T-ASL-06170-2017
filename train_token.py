from zrst import asr
import zrst

# ## set paths ###
corpus_path = r'/home/c2tao/mediaeval_2015/data/QUESST2015-dev/Audio/'
target_path = r'/home/c2tao/mediaeval_token/token/mediaeval_1000_active/'
# init generated by matlab/clusterDetection.m
initial_path = r'/home/c2tao/mediaeval_token/init/mediaeval_1000.txt'
continue_path = r'/home/c2tao/mediaeval_token/token/mediaeval_1000_backup'
flat_path = r'/home/c2tao/mediaeval_token/init/mediaeval_1000_flatten.txt'

#zrst.util.flat_dumpfile(initial_path, flat_path)

# ## generate pattern ###
# declare object


#A = asr.ASR(corpus=corpus_path, target=target_path, dump=flat_path)
# initialize
#A.initialization()
# run for several iterations
#A.iteration('a', config_name)
# increase gaussian count by 1
# always use 'a_keep' instead of 'a' when having more than 1 gaussian mixture
#A.iteration('a_mix', config_name)
#A.iteration('a_keep', config_name)

# ## continue interrupted work ###
# declare object
A = asr.ASR(corpus=corpus_path, target=target_path, dump=flat_path)
# select interrupted folder
#A.offset = 3
A.readASR(continue_path)
# continue for some iterations
for i in range(10):
    A.iteration('a')
